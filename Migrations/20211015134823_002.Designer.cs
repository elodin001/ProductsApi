// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProductsApi.Data;

namespace ProductsApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20211015134823_002")]
    partial class _002
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("ProductsApi.Models.Fornecedor", b =>
                {
                    b.Property<Guid>("FornecedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CEP")
                        .HasColumnType("integer");

                    b.Property<int>("CNPJ")
                        .HasColumnType("integer");

                    b.Property<string>("Cidade")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Endereco")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .HasColumnType("text");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("text");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("text");

                    b.Property<int>("Telefone")
                        .HasColumnType("integer");

                    b.HasKey("FornecedorId");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("ProductsApi.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Categoria")
                        .HasColumnType("text");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ProductsApi.Models.ProdutoFornecedor", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uuid");

                    b.HasKey("ProductId", "FornecedorId");

                    b.HasIndex("FornecedorId");

                    b.ToTable("ProdutoFornecedores");
                });

            modelBuilder.Entity("ProductsApi.Models.ProdutoFornecedor", b =>
                {
                    b.HasOne("ProductsApi.Models.Fornecedor", "Fornecedor")
                        .WithMany("ProdutoFornecedores")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductsApi.Models.Product", "Product")
                        .WithMany("ProdutoFornecedores")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornecedor");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProductsApi.Models.Fornecedor", b =>
                {
                    b.Navigation("ProdutoFornecedores");
                });

            modelBuilder.Entity("ProductsApi.Models.Product", b =>
                {
                    b.Navigation("ProdutoFornecedores");
                });
#pragma warning restore 612, 618
        }
    }
}
